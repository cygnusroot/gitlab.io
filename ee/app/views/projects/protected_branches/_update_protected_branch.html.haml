- protected_branch = local_assigns.fetch(:protected_branch)
- can_unprotect = can?(current_user, :update_protected_branch, protected_branch)

- user_merge_access_levels = protected_branch.merge_access_levels.for_user
- user_push_access_levels = protected_branch.push_access_levels.for_user

- group_merge_access_levels = protected_branch.merge_access_levels.for_group
- group_push_access_levels = protected_branch.push_access_levels.for_group


%td
  = render 'projects/settings/access_level_dropdown',
    access_levels: protected_branch.merge_access_levels,
    input_basic_name: 'merge_access_levels',
    disabled: !can_unprotect,
    toggle_class: 'js-allowed-to-merge qa-allowed-to-merge'
  - if user_merge_access_levels.any?
    %p.small
      The following
      #{ 'user'.pluralize(user_merge_access_levels.size) }
      can also merge into this branch:
      #{ user_merge_access_levels.map(&:humanize).to_sentence }
  - if group_merge_access_levels.any?
    %p.small
      Members of
      #{ group_merge_access_levels.size > 1 ? 'these groups' : 'this group' }
      can also merge into this branch:
      #{ group_merge_access_levels.map(&:humanize).to_sentence }

%td
  = render 'projects/settings/access_level_dropdown',
    access_levels: protected_branch.push_access_levels,
    input_basic_name: 'push_access_levels',
    disabled: !can_unprotect,
    toggle_class: 'js-allowed-to-push'
  - if user_push_access_levels.any?
    %p.small
      The following
      #{ 'user'.pluralize(user_push_access_levels.size) }
      can also push to this branch:
      #{ user_push_access_levels.map(&:humanize).to_sentence }
  - if group_push_access_levels.any?
    %p.small
      Members of
      #{ group_push_access_levels.size > 1 ? 'these groups' : 'this group' }
      can also push to this branch:
      #{ group_push_access_levels.map(&:humanize).to_sentence }
